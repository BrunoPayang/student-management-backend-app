# Generated by Django 5.2.4 on 2025-08-02 22:37

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('schools', '0002_schoolconfiguration_alter_school_options_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('middle_name', models.CharField(blank=True, max_length=100)),
                ('student_id', models.CharField(help_text='School-specific student identification number', max_length=50)),
                ('class_level', models.CharField(help_text="Current class/grade level (e.g., 'Class 6A', 'Grade 10')", max_length=50)),
                ('section', models.CharField(blank=True, help_text="Class section (e.g., 'A', 'B', 'Science')", max_length=20)),
                ('date_of_birth', models.DateField()),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'", regex='^\\+?1?\\d{8,15}$')])),
                ('address', models.TextField(blank=True)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('state', models.CharField(blank=True, max_length=100)),
                ('enrollment_date', models.DateField(default=django.utils.timezone.now)),
                ('graduation_date', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_graduated', models.BooleanField(default=False)),
                ('blood_group', models.CharField(blank=True, choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-')], max_length=5)),
                ('emergency_contact', models.CharField(blank=True, max_length=20)),
                ('medical_conditions', models.TextField(blank=True)),
                ('profile_picture', models.URLField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='schools.school')),
            ],
            options={
                'verbose_name': 'Student',
                'verbose_name_plural': 'Students',
                'db_table': 'students_student',
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='PaymentRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, help_text='Payment amount', max_digits=10)),
                ('currency', models.CharField(default='NGN', max_length=3)),
                ('payment_type', models.CharField(choices=[('tuition', 'Tuition Fee'), ('library', 'Library Fee'), ('laboratory', 'Laboratory Fee'), ('sports', 'Sports Fee'), ('transport', 'Transport Fee'), ('meal', 'Meal Fee'), ('uniform', 'Uniform Fee'), ('examination', 'Examination Fee'), ('other', 'Other')], max_length=50)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid'), ('overdue', 'Overdue'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('due_date', models.DateField()),
                ('paid_date', models.DateField(blank=True, null=True)),
                ('payment_method', models.CharField(blank=True, choices=[('cash', 'Cash'), ('bank_transfer', 'Bank Transfer'), ('card', 'Credit/Debit Card'), ('mobile_money', 'Mobile Money'), ('check', 'Check'), ('other', 'Other')], max_length=50)),
                ('reference_number', models.CharField(blank=True, max_length=100)),
                ('receipt_url', models.URLField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_payments', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_records', to='students.student')),
            ],
            options={
                'verbose_name': 'Payment Record',
                'verbose_name_plural': 'Payment Records',
                'db_table': 'students_payment_record',
                'ordering': ['-due_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ParentStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relationship', models.CharField(choices=[('father', 'Father'), ('mother', 'Mother'), ('guardian', 'Guardian'), ('grandfather', 'Grandfather'), ('grandmother', 'Grandmother'), ('uncle', 'Uncle'), ('aunt', 'Aunt'), ('other', 'Other')], max_length=50)),
                ('is_primary', models.BooleanField(default=False, help_text='Primary contact for school communications')),
                ('is_emergency_contact', models.BooleanField(default=False, help_text='Emergency contact for the student')),
                ('receive_sms', models.BooleanField(default=True)),
                ('receive_email', models.BooleanField(default=True)),
                ('receive_push', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_relationships', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parents', to='students.student')),
            ],
            options={
                'verbose_name': 'Parent-Student Relationship',
                'verbose_name_plural': 'Parent-Student Relationships',
                'db_table': 'students_parent_student',
            },
        ),
        migrations.CreateModel(
            name='BehaviorReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_type', models.CharField(choices=[('positive', 'Positive Behavior'), ('negative', 'Negative Behavior'), ('neutral', 'General Observation'), ('achievement', 'Achievement'), ('discipline', 'Disciplinary Action')], max_length=50)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('location', models.CharField(blank=True, max_length=100)),
                ('incident_date', models.DateField()),
                ('incident_time', models.TimeField(blank=True, null=True)),
                ('severity_level', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=20)),
                ('actions_taken', models.TextField(blank=True)),
                ('follow_up_required', models.BooleanField(default=False)),
                ('follow_up_date', models.DateField(blank=True, null=True)),
                ('notify_parents', models.BooleanField(default=True)),
                ('is_public', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reported_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reported_behaviors', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='behavior_reports', to='students.student')),
            ],
            options={
                'verbose_name': 'Behavior Report',
                'verbose_name_plural': 'Behavior Reports',
                'db_table': 'students_behavior_report',
                'ordering': ['-incident_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Transcript',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('academic_year', models.CharField(max_length=20)),
                ('semester', models.CharField(choices=[('first', 'First Semester'), ('second', 'Second Semester'), ('summer', 'Summer Session'), ('annual', 'Annual Report')], max_length=20)),
                ('file_url', models.URLField(help_text='Firebase Storage URL')),
                ('file_name', models.CharField(max_length=255)),
                ('file_size', models.IntegerField(help_text='File size in bytes')),
                ('gpa', models.DecimalField(blank=True, decimal_places=2, help_text='Grade Point Average', max_digits=3, null=True)),
                ('total_credits', models.IntegerField(blank=True, null=True)),
                ('rank_in_class', models.IntegerField(blank=True, null=True)),
                ('class_size', models.IntegerField(blank=True, null=True)),
                ('is_public', models.BooleanField(default=False, help_text='Visible to parents')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transcripts', to='students.student')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_transcripts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Transcript',
                'verbose_name_plural': 'Transcripts',
                'db_table': 'students_transcript',
                'ordering': ['-academic_year', '-semester'],
            },
        ),
        migrations.AddIndex(
            model_name='student',
            index=models.Index(fields=['school', 'is_active'], name='students_st_school__3f378d_idx'),
        ),
        migrations.AddIndex(
            model_name='student',
            index=models.Index(fields=['class_level'], name='students_st_class_l_326080_idx'),
        ),
        migrations.AddIndex(
            model_name='student',
            index=models.Index(fields=['enrollment_date'], name='students_st_enrollm_8263f3_idx'),
        ),
        migrations.AddIndex(
            model_name='student',
            index=models.Index(fields=['date_of_birth'], name='students_st_date_of_a50842_idx'),
        ),
        migrations.AddIndex(
            model_name='student',
            index=models.Index(fields=['gender'], name='students_st_gender_e01d54_idx'),
        ),
        migrations.AddIndex(
            model_name='student',
            index=models.Index(fields=['school', 'class_level', 'is_active'], name='students_st_school__688227_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='student',
            unique_together={('school', 'student_id')},
        ),
        migrations.AddIndex(
            model_name='paymentrecord',
            index=models.Index(fields=['student', 'status'], name='students_pa_student_1d96ea_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentrecord',
            index=models.Index(fields=['due_date'], name='students_pa_due_dat_47c26c_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentrecord',
            index=models.Index(fields=['payment_type'], name='students_pa_payment_0960be_idx'),
        ),
        migrations.AddIndex(
            model_name='parentstudent',
            index=models.Index(fields=['parent', 'is_primary'], name='students_pa_parent__67fde0_idx'),
        ),
        migrations.AddIndex(
            model_name='parentstudent',
            index=models.Index(fields=['student', 'is_primary'], name='students_pa_student_20e788_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='parentstudent',
            unique_together={('parent', 'student')},
        ),
        migrations.AddIndex(
            model_name='behaviorreport',
            index=models.Index(fields=['student', 'report_type'], name='students_be_student_ea5b4c_idx'),
        ),
        migrations.AddIndex(
            model_name='behaviorreport',
            index=models.Index(fields=['reported_by', 'created_at'], name='students_be_reporte_18ba53_idx'),
        ),
        migrations.AddIndex(
            model_name='behaviorreport',
            index=models.Index(fields=['incident_date'], name='students_be_inciden_d8e007_idx'),
        ),
        migrations.AddIndex(
            model_name='transcript',
            index=models.Index(fields=['student', 'academic_year'], name='students_tr_student_f9a629_idx'),
        ),
        migrations.AddIndex(
            model_name='transcript',
            index=models.Index(fields=['uploaded_by', 'created_at'], name='students_tr_uploade_193b18_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='transcript',
            unique_together={('student', 'academic_year', 'semester')},
        ),
    ]
