# Generated by Django 4.2.7 on 2025-09-14 13:50

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('schools', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='SchoolConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('academic_year_start', models.DateField(help_text='Start date of academic year')),
                ('academic_year_end', models.DateField(help_text='End date of academic year')),
                ('current_semester', models.CharField(choices=[('first', 'First Semester'), ('second', 'Second Semester'), ('summer', 'Summer Session')], default='first', max_length=20)),
                ('enable_sms_notifications', models.BooleanField(default=True)),
                ('enable_email_notifications', models.BooleanField(default=True)),
                ('enable_push_notifications', models.BooleanField(default=True)),
                ('currency', models.CharField(default='NGN', max_length=3)),
                ('payment_reminder_days', models.IntegerField(default=7)),
                ('max_file_size_mb', models.IntegerField(default=10)),
                ('allowed_file_types', models.JSONField(default=list, help_text='List of allowed file extensions')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'School Configuration',
                'verbose_name_plural': 'School Configurations',
                'db_table': 'schools_school_configuration',
            },
        ),
        migrations.AlterModelOptions(
            name='school',
            options={'ordering': ['name'], 'verbose_name': 'School', 'verbose_name_plural': 'Schools'},
        ),
        migrations.RenameField(
            model_name='school',
            old_name='phone',
            new_name='postal_code',
        ),
        migrations.RemoveField(
            model_name='school',
            name='email',
        ),
        migrations.AddField(
            model_name='school',
            name='academic_year',
            field=models.CharField(default='2024-2025', help_text='Current academic year', max_length=20),
        ),
        migrations.AddField(
            model_name='school',
            name='city',
            field=models.CharField(default='Niamey', max_length=100),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='school',
            name='contact_email',
            field=models.EmailField(default='admin@schoolconnect.ne', help_text='Primary contact email', max_length=254),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='school',
            name='contact_phone',
            field=models.CharField(default='+22712345678', help_text='Primary contact phone number', max_length=20, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'", regex='^\\+?1?\\d{8,15}$')]),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='school',
            name='country',
            field=models.CharField(default='Niger', max_length=100),
        ),
        migrations.AddField(
            model_name='school',
            name='is_verified',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='school',
            name='school_type',
            field=models.CharField(choices=[('primary', 'Primary School'), ('secondary', 'Secondary School'), ('both', 'Primary & Secondary'), ('university', 'University'), ('other', 'Other')], default='both', max_length=50),
        ),
        migrations.AddField(
            model_name='school',
            name='state',
            field=models.CharField(default='Niamey', max_length=100),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='school',
            name='address',
            field=models.TextField(help_text='Full school address'),
        ),
        # Keep the original BigAutoField for now - we'll handle UUID conversion in a separate migration
        migrations.AlterField(
            model_name='school',
            name='logo',
            field=models.URLField(blank=True, help_text='Firebase Storage URL for school logo', null=True),
        ),
        migrations.AlterField(
            model_name='school',
            name='name',
            field=models.CharField(help_text='Full school name', max_length=200),
        ),
        migrations.AlterField(
            model_name='school',
            name='primary_color',
            field=models.CharField(default='#1976D2', help_text='Primary brand color in hex format (e.g., #1976D2)', max_length=7),
        ),
        migrations.AlterField(
            model_name='school',
            name='secondary_color',
            field=models.CharField(default='#424242', help_text='Secondary brand color in hex format', max_length=7),
        ),
        migrations.AlterField(
            model_name='school',
            name='slug',
            field=models.SlugField(help_text='URL-friendly identifier for the school', max_length=100, unique=True),
        ),
        migrations.AlterField(
            model_name='school',
            name='website',
            field=models.URLField(blank=True, null=True),
        ),
        migrations.AddIndex(
            model_name='school',
            index=models.Index(fields=['slug'], name='schools_sch_slug_51c325_idx'),
        ),
        migrations.AddIndex(
            model_name='school',
            index=models.Index(fields=['is_active', 'is_verified'], name='schools_sch_is_acti_b6e18f_idx'),
        ),
        migrations.AddIndex(
            model_name='school',
            index=models.Index(fields=['city', 'state'], name='schools_sch_city_eac1bd_idx'),
        ),
        migrations.AddIndex(
            model_name='school',
            index=models.Index(fields=['created_at'], name='schools_sch_created_382c96_idx'),
        ),
        migrations.AlterModelTable(
            name='school',
            table='schools_school',
        ),
        migrations.AddField(
            model_name='schoolconfiguration',
            name='school',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='configuration', to='schools.school'),
        ),
    ]
