# Payment Record API Testing
# Use this file with REST Client extension in VS Code or similar tools

### Variables
@baseUrl = http://localhost:8000/api
@token = YOUR_JWT_TOKEN_HERE

### ===============================================
### 1. AUTHENTICATION (Get token first)
### ===============================================

POST {{baseUrl}}/auth/login/
Content-Type: application/json

{
    "email": "admin@school.com",
    "password": "your_password"
}

### ===============================================
### 2. BROWSE ALL PAYMENT RECORDS
### ===============================================

GET {{baseUrl}}/payment-records/
Authorization: Bearer {{token}}

### ===============================================
### 3. FILTER PAYMENT RECORDS
### ===============================================

# Filter by status
GET {{baseUrl}}/payment-records/?status=pending
Authorization: Bearer {{token}}

###

# Filter by payment type
GET {{baseUrl}}/payment-records/?payment_type=tuition
Authorization: Bearer {{token}}

###

# Filter by currency
GET {{baseUrl}}/payment-records/?currency=NGN
Authorization: Bearer {{token}}

###

# Search by student name
GET {{baseUrl}}/payment-records/?search=John
Authorization: Bearer {{token}}

###

# Search by reference number
GET {{baseUrl}}/payment-records/?search=REF123
Authorization: Bearer {{token}}

###

# Multiple filters
GET {{baseUrl}}/payment-records/?status=pending&payment_type=tuition&currency=NGN
Authorization: Bearer {{token}}

### ===============================================
### 4. GET STUDENT-SPECIFIC PAYMENT RECORDS
### ===============================================

# Method 1: Via student endpoint (student ID = 1)
GET {{baseUrl}}/students/1/payment_records/
Authorization: Bearer {{token}}

###

# Method 2: Via search in payment records
GET {{baseUrl}}/payment-records/?search=StudentName
Authorization: Bearer {{token}}

### ===============================================
### 5. GET SPECIAL PAYMENT VIEWS
### ===============================================

# Get overdue payments
GET {{baseUrl}}/payment-records/overdue_payments/
Authorization: Bearer {{token}}

###

# Get payment summary statistics
GET {{baseUrl}}/payment-records/payment_summary/
Authorization: Bearer {{token}}

### ===============================================
### 6. CREATE NEW PAYMENT RECORD
### ===============================================

POST {{baseUrl}}/payment-records/
Authorization: Bearer {{token}}
Content-Type: application/json

{
    "student": 1,
    "amount": "50000.00",
    "currency": "NGN",
    "payment_type": "tuition",
    "status": "pending",
    "due_date": "2024-03-31",
    "notes": "Q1 2024 tuition fee"
}

### ===============================================
### 7. GET SPECIFIC PAYMENT RECORD
### ===============================================

GET {{baseUrl}}/payment-records/1/
Authorization: Bearer {{token}}

### ===============================================
### 8. UPDATE PAYMENT RECORD (PATCH - Partial Update)
### ===============================================

# Mark payment as paid
PATCH {{baseUrl}}/payment-records/1/
Authorization: Bearer {{token}}
Content-Type: application/json

{
    "status": "paid",
    "paid_date": "2024-01-15",
    "payment_method": "bank_transfer",
    "reference_number": "TXN123456789"
}

###

# Update amount only
PATCH {{baseUrl}}/payment-records/1/
Authorization: Bearer {{token}}
Content-Type: application/json

{
    "amount": "75000.00"
}

###

# Mark as overdue
PATCH {{baseUrl}}/payment-records/1/
Authorization: Bearer {{token}}
Content-Type: application/json

{
    "status": "overdue"
}

###

# Cancel payment
PATCH {{baseUrl}}/payment-records/1/
Authorization: Bearer {{token}}
Content-Type: application/json

{
    "status": "cancelled",
    "notes": "Student transferred to another school"
}

###

# Process refund
PATCH {{baseUrl}}/payment-records/1/
Authorization: Bearer {{token}}
Content-Type: application/json

{
    "status": "refunded",
    "notes": "Refund processed due to overpayment"
}

### ===============================================
### 9. UPDATE PAYMENT RECORD (PUT - Full Update)
### ===============================================

PUT {{baseUrl}}/payment-records/1/
Authorization: Bearer {{token}}
Content-Type: application/json

{
    "student": 1,
    "amount": "60000.00",
    "currency": "NGN",
    "payment_type": "tuition",
    "status": "paid",
    "due_date": "2024-03-31",
    "paid_date": "2024-01-20",
    "payment_method": "mobile_money",
    "reference_number": "MM987654321",
    "notes": "Updated amount and payment method"
}

### ===============================================
### 10. DELETE PAYMENT RECORD
### ===============================================

DELETE {{baseUrl}}/payment-records/1/
Authorization: Bearer {{token}}

### ===============================================
### 11. STUDENT STATISTICS (including payments)
### ===============================================

GET {{baseUrl}}/students/1/statistics/
Authorization: Bearer {{token}}

### ===============================================
### 12. CREATE MULTIPLE PAYMENT TYPES
### ===============================================

# Tuition Fee
POST {{baseUrl}}/payment-records/
Authorization: Bearer {{token}}
Content-Type: application/json

{
    "student": 1,
    "amount": "100000.00",
    "payment_type": "tuition",
    "status": "pending",
    "due_date": "2024-03-31"
}

###

# Library Fee
POST {{baseUrl}}/payment-records/
Authorization: Bearer {{token}}
Content-Type: application/json

{
    "student": 1,
    "amount": "5000.00",
    "payment_type": "library",
    "status": "pending",
    "due_date": "2024-02-28"
}

###

# Sports Fee
POST {{baseUrl}}/payment-records/
Authorization: Bearer {{token}}
Content-Type: application/json

{
    "student": 1,
    "amount": "15000.00",
    "payment_type": "sports",
    "status": "pending",
    "due_date": "2024-04-15"
}

###

# Transport Fee
POST {{baseUrl}}/payment-records/
Authorization: Bearer {{token}}
Content-Type: application/json

{
    "student": 1,
    "amount": "20000.00",
    "payment_type": "transport",
    "status": "pending",
    "due_date": "2024-01-31"
}

### ===============================================
### 13. BULK OPERATIONS EXAMPLES
### ===============================================

# Get all pending payments for the school
GET {{baseUrl}}/payment-records/?status=pending
Authorization: Bearer {{token}}

###

# Get all tuition payments
GET {{baseUrl}}/payment-records/?payment_type=tuition
Authorization: Bearer {{token}}

###

# Get payments due this month (you'd need to implement date filtering)
# This is just an example - date filtering might need custom implementation
GET {{baseUrl}}/payment-records/?due_date__month=1&due_date__year=2024
Authorization: Bearer {{token}}
